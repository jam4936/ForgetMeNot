type Question @model @auth(rules: [{allow: private}]) {
  id: ID!
  prompt: String
  response: String
  patientID: ID! @index(name: "byPatient")
}

enum TimeOfDay {
  MORNING
  AFTERNOON
  EVENING
  BEDTIME
}

type Routine @model @auth(rules: [{allow: private}]) {
  id: ID!
  timeOfDay: TimeOfDay
  routineExplanation: String
  patientID: ID! @index(name: "byPatient")
}

enum PersonalityTrait {
  EXT1
  EXT2
  FRI1
  FRI2
  HAP1
  HAP2
  INT1
  INT2
  RES1
  RES2
  SER1
  SER2
  SUS1
  SUS2
  TIM1
  TIM2
  CAR1
  CAR2
  CLE1
  CLE2
  CLV1
  CLV2
  CRE1
  CRE2
  CUR1
  CUR2
  DAR1
  DAR2
  ADV1
  ADV2
  AGR1
  AGR2
  COU1
  COU2
  PER1
  PER2
  ROM1
  ROM2
  SOC1
  SOC2
  EMO1
  EMO2
  OUT1
  OUT2
  COM1
  COM2
  PLA1
  PLA2
}

enum Education {
  GRADESCHOOL
  HIGHSCHOOL
  TECHSCHOOL
  HIGHGRAD
  COLLEGEGRAD
  COLLEGE
  GRADSCHOOL
}

enum Relationship {
  MOM
  DAD
  WIFE
  HUSBAND
  SON
  DAUGHTER
  GRANDDAUGHTER
  GRANDSON
  GRANDCHILD
  CHILD
  PARENT
  SPOUSE
  SISTER
  BROTHER
  SIBLING
}

type Relative @model @auth(rules: [{allow: private}]) {
  id: ID!
  firstName: String
  lastName: String
  relationship: Relationship
  patientID: ID! @index(name: "byPatient")
}

enum Locations {
  UNITY
  BROOKDALE
  MAPLE
}

type Patient @model @auth(rules: [{allow: public}]) {
  id: ID!
  location: Locations!
  firstName: String!
  lastName: String!
  birthPlace: String
  dateOfBirth: AWSDate!
  Relatives: [Relative] @hasMany(indexName: "byPatient", fields: ["id"])
  education: [Education]
  personalityTraits: [PersonalityTrait]
  notes: String
  Routines: [Routine] @hasMany(indexName: "byPatient", fields: ["id"])
  familyEmails: [AWSEmail]
  Questions: [Question] @hasMany(indexName: "byPatient", fields: ["id"])
}
 